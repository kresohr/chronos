services:
# Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    command: start-dev  # use start for production
    mem_limit: 1g
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db_keycloak/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - QUARKUS_SMALLRYE_HEALTH_ENABLED=true
    depends_on:
      db_keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/realms/master"]
      interval: 10s
      retries: 5
      start_period: 60s
      timeout: 5s
    restart: unless-stopped
    ports:
      - "8080:8080"

# Keycloak db
  db_keycloak:
    image: postgres:17
    mem_limit: 1g
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 10s
      retries: 5
      timeout: 5s
    restart: unless-stopped
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data

# Backend db
  db_backend:
    image: postgres:17
    ports:
      - "5432:5432"
    mem_limit: 1g
    environment:
      POSTGRES_DB: chronos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      timeout: 5s
    restart: unless-stopped
    volumes:
      - backend_db_data:/var/lib/postgresql/data

# Backend
  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    depends_on:
      db_backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

# Frontend
  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  keycloak_db_data:
  backend_db_data: